// <auto-generated />
using System;
using ComputerStore.BoundedContext.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComputerStore.BoundedContext.Migrations
{
    [DbContext(typeof(ComputerStoreContext))]
    [Migration("20200622192647_Initial-Database")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.AnonymousCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("WebsiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WebsiteId");

                    b.ToTable("AnonymousCart");
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WebsiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.HasIndex("WebsiteId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("TemplateMetaData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateSpecificData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("WebsiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 240, DateTimeKind.Utc).AddTicks(2070),
                            Name = "Dell",
                            TemplateMetaData = "{\"CPU\":\"Intel Xeon\",\"RAM\":\"16GB\",\"SSD\":\"120GB\",\"HDD\":\"2TB\"}",
                            TemplateSpecificData = "{\"Color\":\"Black, White\",\"VGA\":\"15.6-inch FHD (1920 x 1080) Anti-glare LED Backlit Non-touch Narrow Border WVA Display\"}",
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 242, DateTimeKind.Utc).AddTicks(2531),
                            Name = "Asus",
                            TemplateMetaData = "{\"CPU\":\"Core i7\",\"RAM\":\"32GB\",\"SSD\":\"280GB\",\"HDD\":\"1TB\"}",
                            TemplateSpecificData = "{\"Color\":\"Black, Yellow\",\"VGA\":\"Intel UHD Graphics 620\",\"Pin\":\"3-Cell Battery, 51 Whr\"}",
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 243, DateTimeKind.Utc).AddTicks(9017),
                            Name = "Dell Vostro",
                            ParentId = 1,
                            TemplateMetaData = "{\"CPU\":\"Core i3\",\"RAM\":\"16GB\",\"SSD\":\"120GB\",\"HDD\":\"500GB\"}",
                            TemplateSpecificData = "{\"Color\":\"Black\",\"VGA\":\"Intel UHD 620\",\"PIN\":\"3Cell (42Whr)\"}",
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 243, DateTimeKind.Utc).AddTicks(9165),
                            Name = "Dell Inspiron",
                            ParentId = 1,
                            TemplateMetaData = "{\"CPU\":\"Core i7\",\"RAM\":\"16GB\",\"SSD\":\"120GB\",\"HDD\":\"1TB\"}",
                            TemplateSpecificData = "{\"Color\":\"White\",\"VGA\":\"Intel UHD Graphics 620\"}",
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 243, DateTimeKind.Utc).AddTicks(9263),
                            Name = "HP",
                            TemplateMetaData = "{\"CPU\":\"Intel Core i7 10510U\",\"RAM\":\"8GB\",\"SSD\":\"120GB\",\"HDD\":\"1TB\"}",
                            TemplateSpecificData = "{\"Color\":\"Black, White\",\"VGA\":\"Intel HD Graphics\"}",
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 243, DateTimeKind.Utc).AddTicks(9306),
                            Name = "HP Pavilion",
                            ParentId = 5,
                            TemplateMetaData = "{\"CPU\":\"Intel Core i3 10110U\",\"RAM\":\"4GB\",\"SSD\":\"256GB\",\"HDD\":\"1TB\"}",
                            TemplateSpecificData = "{\"Color\":\"Yellow\",\"VGA\":\"Intel HD Graphics\"}",
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 243, DateTimeKind.Utc).AddTicks(9388),
                            Name = "HP Elitebook",
                            ParentId = 5,
                            TemplateMetaData = "{\"CPU\":\"Intel Core i7 10510U\",\"RAM\":\"16GB DDR4 2666MHz\",\"SSD\":\"512GB\",\"HDD\":\"1TB\"}",
                            TemplateSpecificData = "{\"Color\":\"Black, White\",\"VGA\":\"NVIDIA GeForce GTX1050 4G DDR5\"}",
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 243, DateTimeKind.Utc).AddTicks(9431),
                            Name = "Apple",
                            TemplateMetaData = "{\"CPU\":\"Intel Core i5 1.4Ghz\",\"RAM\":\"8GB\",\"SSD\":\"256GB\",\"HDD\":\"2TB\"}",
                            TemplateSpecificData = "{\"Color\":\"Gray, Black, White, Gold\",\"VGA\":\"Intel Iris Plus 645\"}",
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 243, DateTimeKind.Utc).AddTicks(9472),
                            Name = "Apple Macbook Air",
                            ParentId = 8,
                            TemplateMetaData = "{\"CPU\":\"Intel Core i5 1.6Ghz\",\"RAM\":\"8GB\",\"SSD\":\"128GB\",\"HDD\":\"2TB\"}",
                            TemplateSpecificData = "{\"Color\":\"Rose Gold\",\"VGA\":\"Intel UHD 617\"}",
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 243, DateTimeKind.Utc).AddTicks(9551),
                            Name = "Apple Macbook Pro",
                            ParentId = 8,
                            TemplateMetaData = "{\"CPU\":\"Intel Core i5 1.4Ghz\",\"RAM\":\"8GB\",\"SSD\":\"128GB\",\"HDD\":\"1TB\"}",
                            TemplateSpecificData = "{\"Color\":\"Grey, White\",\"VGA\":\"Intel Iris Plus 645\"}",
                            WebsiteId = 1
                        });
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 67, DateTimeKind.Utc).AddTicks(1396),
                            Name = "Fsoft"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 67, DateTimeKind.Utc).AddTicks(2363),
                            Name = "CMC"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 67, DateTimeKind.Utc).AddTicks(2376),
                            Name = "SamSung"
                        });
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PaymentState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ShipAddress")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("WebsiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WebsiteId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 263, DateTimeKind.Utc).AddTicks(1160),
                            OrderState = 0,
                            Phone = "0886663346",
                            ShipAddress = "Ha Noi",
                            Total = 40500000f,
                            UserId = 6,
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 263, DateTimeKind.Utc).AddTicks(1783),
                            OrderState = 0,
                            Phone = "0886663346",
                            ShipAddress = "Ha Noi",
                            Total = 15500000f,
                            UserId = 7,
                            WebsiteId = 2
                        });
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 1,
                            Discount = 0f,
                            Id = 1,
                            Price = 12500000f,
                            Quantity = 2
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 2,
                            Discount = 0f,
                            Id = 2,
                            Price = 15500000f,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 4,
                            Discount = 0f,
                            Id = 3,
                            Price = 15500000f,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MetaData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("SpecificData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Warranty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((12))");

                    b.Property<int>("WebsiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WebsiteId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 260, DateTimeKind.Utc).AddTicks(5287),
                            Description = "Máy tính Dell vostro 5537",
                            Discount = 5f,
                            MetaData = "{\"Cpu\":\"Core I7\",\"Ram\":\"4G\",\"Ssd\":\"120G\",\"Hdd\":\"500G\"}",
                            Name = "Dell Vostro 5537",
                            Price = 12500000f,
                            ProductCode = "LAP001",
                            Quantity = 100,
                            SpecificData = "{\"Part number\":\"2N1R82\",\"Bộ vi xử lý\":\"Intel Core i5-10210U (1.6Ghz/6MB cache)\",\"Chipset\":\"Intel\",\"Bộ nhớ trong\":\"8GB DDR4 2666Mhz (8GB *1)\",\"Số khe cắm\":\"2\",\"VGA\":\"AMD Radeon 610 2G DDR5\",\"Ổ cứng\":\"256GB PCIe NVMe SSD\",\"Màn hình\":\"14.0 inch FHD (1920 x 1080) Anti-Glare LED Backlit\",\"Webcam\":\"HD\",\"Audio\":\"Yes\",\"Giao tiếp mạng\":\"Gigabit\",\"Giao tiếp không dây\":\"802.11ac ,Bluetooth 4.1\",\"Card Reader\":\"SD\"}",
                            Status = 0,
                            ViewCount = 0,
                            Warranty = 12,
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 260, DateTimeKind.Utc).AddTicks(6772),
                            Description = "Máy tính Dell vostro 5537",
                            Discount = 7f,
                            MetaData = "{\"Cpu\":\"Core I7\",\"Ram\":\"8G\",\"Ssd\":\"120G\",\"Hdd\":\"250G\"}",
                            Name = "Dell Vostro 6666",
                            Price = 15500000f,
                            ProductCode = "LAP002",
                            Quantity = 200,
                            SpecificData = "{\"Part number\":\"2N1R82\",\"Bộ vi xử lý\":\"Intel Core i5-10210U (1.6Ghz/6MB cache)\",\"Chipset\":\"Intel\",\"Bộ nhớ trong\":\"8GB DDR4 2666Mhz (8GB *1)\",\"Số khe cắm\":\"2\",\"VGA\":\"AMD Radeon 610 2G DDR5\",\"Ổ cứng\":\"256GB PCIe NVMe SSD\",\"Màn hình\":\"14.0 inch FHD (1920 x 1080) Anti-Glare LED Backlit\",\"Webcam\":\"HD\",\"Audio\":\"Yes\",\"Giao tiếp mạng\":\"Gigabit\",\"Giao tiếp không dây\":\"802.11ac ,Bluetooth 4.1\",\"Card Reader\":\"SD\"}",
                            Status = 0,
                            ViewCount = 0,
                            Warranty = 12,
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 260, DateTimeKind.Utc).AddTicks(7112),
                            Description = "Máy tính Dell vostro 5537",
                            Discount = 0f,
                            MetaData = "{\"Cpu\":\"Core I7\",\"Ram\":\"16G\",\"Ssd\":\"120G\",\"Hdd\":\"500G\"}",
                            Name = "Dell Vostro 5537",
                            Price = 11500000f,
                            ProductCode = "LAP003",
                            Quantity = 250,
                            SpecificData = "{\"Part number\":\"2N1R82\",\"Bộ vi xử lý\":\"Intel Core i5-10210U (1.6Ghz/6MB cache)\",\"Chipset\":\"Intel\",\"Bộ nhớ trong\":\"8GB DDR4 2666Mhz (8GB *1)\",\"Số khe cắm\":\"2\",\"VGA\":\"AMD Radeon 610 2G DDR5\",\"Ổ cứng\":\"256GB PCIe NVMe SSD\",\"Màn hình\":\"14.0 inch FHD (1920 x 1080) Anti-Glare LED Backlit\",\"Webcam\":\"HD\",\"Audio\":\"Yes\",\"Giao tiếp mạng\":\"Gigabit\",\"Giao tiếp không dây\":\"802.11ac ,Bluetooth 4.1\",\"Card Reader\":\"SD\"}",
                            Status = 0,
                            ViewCount = 0,
                            Warranty = 24,
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 262, DateTimeKind.Utc).AddTicks(3669),
                            Description = "<h2>Đặc điểm nổi bật của Laptop Dell Vostro 3490 (2N1R82) (i5 10210U/8GB Ram /256GBSSD/ 610 2G/14.0 inch FHD/Win 10/Đen)</h2><h3>Màn hình</h3><p>Laptop Dell Vostro 3490 2N1R82 có màn hình 14.0 inch Full HD giúp bạn cho hình ảnh sắc nét, chi tiết ở mọi góc độ.Cùng tận hưởng hình ảnh sắc nét với công nghệ chống chói lóa giúp bạn thỏa sức trải nghiệm ngay cả khi làm việc, học tập trong môi trường nhiều ánh sáng.</p><h3> Bàn phím </h3><p> Bàn phím cho cảm giác gõ thoải mái nhờ độ nảy tốt,khoảng cách các phím được sắp xếp khoa học.Phần touchpad rộng rãi với khả năng hỗ trợ đa điểm giúp các thao tác cuộn trang, thu phóng… được thực hiện dễ dàng và chính xác.Máy hỗ trợ nhận dạng vân tay giúp máy tính của bạn được bảo mật một cách tối đa, chỉ có bạn mới có thể mở được chiếc laptop này.</p></p><h3>Cổng kết nối</h3><p> Laptop Dell Vostro 3490 2N1R82 được trang bị những chuẩn kết nối thông dụng có mặt hầu hết trên tất cả những dòng phổ thông hiện nay như cổng USB 2.0, USB 3.0, VGACard Reader,… điều này giúp tăng sự lựa chọn cho bạn với nhiều nhu cầu kết nối khác nhau và cho phép kết nối máy với nhiều thiết bị ngoại vi dễ dàng hơn.</p><p>Máy có cổng mạng LAN, hỗ trợ kết nối Wifi giúp bạn truy cập Internet nhanh chóng, phục vụ đắc lực cho công việc, học tập</p>",
                            Discount = 0f,
                            MetaData = "{\"CPU\":\"Intel Core i5 10210U\",\"RAM\":\"8GB\",\"SSD\":\"256GB\"}",
                            Name = "Laptop Dell Vostro 3490 (2N1R82) (i5 10210U/8GB Ram /256GBSSD/ 610 2G/14.0 inch FHD/Win 10/Đen)",
                            Price = 16289000f,
                            ProductCode = "LAP004",
                            Quantity = 250,
                            SpecificData = "{\"Part number\":\"2N1R82\",\"Bộ vi xử lý\":\"Intel Core i5-10210U (1.6Ghz/6MB cache)\",\"Chipset\":\"Intel\",\"Bộ nhớ trong\":\"8GB DDR4 2666Mhz (8GB *1)\",\"Số khe cắm\":\"2\",\"VGA\":\"AMD Radeon 610 2G DDR5\",\"Ổ cứng\":\"256GB PCIe NVMe SSD\",\"Màn hình\":\"14.0 inch FHD (1920 x 1080) Anti-Glare LED Backlit\",\"Webcam\":\"HD\",\"Audio\":\"Yes\",\"Giao tiếp mạng\":\"Gigabit\",\"Giao tiếp không dây\":\"802.11ac ,Bluetooth 4.1\",\"Card Reader\":\"SD\"}",
                            Status = 0,
                            ViewCount = 0,
                            Warranty = 24,
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 262, DateTimeKind.Utc).AddTicks(4231),
                            Description = "Máy tính Asus K4444",
                            Discount = 0f,
                            MetaData = "{\"Cpu\":\"Core I7\",\"Ram\":\"16G\",\"Ssd\":\"120G\",\"Hdd\":\"500G\"}",
                            Name = "Asus K4444",
                            Price = 12500000f,
                            ProductCode = "LAP005",
                            Quantity = 250,
                            SpecificData = "{\"Part number\":\"2N1R82\",\"Bộ vi xử lý\":\"Intel Core i5-10210U (1.6Ghz/6MB cache)\",\"Chipset\":\"Intel\",\"Bộ nhớ trong\":\"8GB DDR4 2666Mhz (8GB *1)\",\"Số khe cắm\":\"2\",\"VGA\":\"AMD Radeon 610 2G DDR5\",\"Ổ cứng\":\"256GB PCIe NVMe SSD\",\"Màn hình\":\"14.0 inch FHD (1920 x 1080) Anti-Glare LED Backlit\",\"Webcam\":\"HD\",\"Audio\":\"Yes\",\"Giao tiếp mạng\":\"Gigabit\",\"Giao tiếp không dây\":\"802.11ac ,Bluetooth 4.1\",\"Card Reader\":\"SD\"}",
                            Status = 0,
                            ViewCount = 0,
                            Warranty = 24,
                            WebsiteId = 2
                        });
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 262, DateTimeKind.Utc).AddTicks(6876),
                            ImageUrl = "assets/productimages/LAP001/LAP001_01.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 262, DateTimeKind.Utc).AddTicks(7521),
                            ImageUrl = "assets/productimages/LAP001/LAP001_02.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 262, DateTimeKind.Utc).AddTicks(7534),
                            ImageUrl = "assets/productimages/LAP002/LAP002_01.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 262, DateTimeKind.Utc).AddTicks(7536),
                            ImageUrl = "assets/productimages/LAP003/LAP003_01.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 262, DateTimeKind.Utc).AddTicks(7537),
                            ImageUrl = "assets/productimages/LAP004/LAP004_01.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 262, DateTimeKind.Utc).AddTicks(7538),
                            ImageUrl = "assets/productimages/LAP005/LAP005_01.jpg",
                            ProductId = 5
                        });
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime");

                    b.Property<string>("ReplacedByToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime");

                    b.Property<string>("RevokedByIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 3,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("WebsiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("WebsiteId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Hà Nội",
                            Email = "sa@abc.com",
                            FirstName = "Administrator",
                            LastName = "",
                            Password = "bp/Xrgx7+49qHB3a9eC4ZF/xE0xVr61ABIhxZ0g3lXc=",
                            Phone = "088666332",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "17 Duy Tân, Cầu Giấy, Hà Nội",
                            Email = "admin@gmail.com",
                            FirstName = "Fshop",
                            LastName = "Admin",
                            Password = "DZCBGrk+6Jx/uMpdH4cTIsJRy3Mu9I8ZzNLcD5KSMek=",
                            Phone = "0123456789",
                            RoleId = 2,
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "19 Duy Tân, Cầu Giấy, Hà Nội",
                            Email = "admin@cmc.com",
                            FirstName = "Administrator",
                            LastName = "CMC",
                            Password = "kqbEJ7Pv5cxJFY2QI7TPX6sYO+i4Nqo2b4NldvfS0bw=",
                            Phone = "0987654321",
                            RoleId = 2,
                            WebsiteId = 2
                        },
                        new
                        {
                            Id = 4,
                            Address = "Thái Nguyên, Việt Nam",
                            Email = "admin@samsung.com",
                            FirstName = "Administrator",
                            LastName = "",
                            Password = "wGKmxP5wb870aBXCMC0WhnHK8cCgj5sRDhW8jhwDKJg=",
                            Phone = "0456789123",
                            RoleId = 2,
                            WebsiteId = 3
                        },
                        new
                        {
                            Id = 5,
                            Address = "Hà Nội",
                            Email = "binhhoang@gmail.com",
                            FirstName = "Bình",
                            LastName = "Hoàng Thị Vũ",
                            Password = "2Pqovjl5wRuQmAqYeRbulK3oDJOzMBWTe9EYpyUQmA8=",
                            Phone = "0886663345",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            Address = "Hà Nội",
                            Email = "nguyentuan@gmail.com",
                            FirstName = "Tuấn",
                            LastName = "Nguyễn",
                            Password = "zxe9I4uWD9TngXQ6OljmHJk1TZrHH6HlsICnFaIARCk=",
                            Phone = "0886663346",
                            RoleId = 3,
                            WebsiteId = 1
                        },
                        new
                        {
                            Id = 7,
                            Address = "Hà Nội",
                            Email = "buidung@gmail.com",
                            FirstName = "Dũng",
                            LastName = "Bùi Doãn",
                            Password = "uT0pxCBWeR4gqh+gnKGw+H6xFgpQ5eP7big9G9VhBcU=",
                            Phone = "0886663347",
                            RoleId = 3,
                            WebsiteId = 2
                        },
                        new
                        {
                            Id = 8,
                            Address = "Hà Nội",
                            Email = "quangnguyen@gmail.com",
                            FirstName = "Quang",
                            LastName = "Nguyễn Văn",
                            Password = "5kkTZN74J/7uS0qMbRIOjy1c0sfBu1HvzL/0/US5EBc=",
                            Phone = "0886663348",
                            RoleId = 3,
                            WebsiteId = 2
                        },
                        new
                        {
                            Id = 9,
                            Address = "Hà Nội",
                            Email = "toan@gmail.com",
                            FirstName = "Toàn",
                            LastName = "Hà Duy",
                            Password = "XeX3Vn8y/NmKu4/MXRohSrOfoMDSRr9r1OAKBdExRI0=",
                            Phone = "0886663349",
                            RoleId = 3,
                            WebsiteId = 3
                        });
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.Website", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("SecretKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UrlPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SecretKey")
                        .IsUnique();

                    b.HasIndex("UrlPath")
                        .IsUnique();

                    b.ToTable("Website");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 69, DateTimeKind.Utc).AddTicks(996),
                            Name = "Fsoft Website",
                            SecretKey = "c8c60f47-cff4-4c01-a8ae-926dc59df43a",
                            UrlPath = "fsoft"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 69, DateTimeKind.Utc).AddTicks(1670),
                            Name = "CMC Website",
                            SecretKey = "c065c139-651f-4d20-9974-af831292d606",
                            UrlPath = "cmc"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 3,
                            CreatedDate = new DateTime(2020, 6, 22, 19, 26, 47, 69, DateTimeKind.Utc).AddTicks(1686),
                            Name = "SamSung Website",
                            SecretKey = "61c81bd0-aa72-44f8-a337-b5441d0a1fc6",
                            UrlPath = "samsung"
                        });
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.AnonymousCart", b =>
                {
                    b.HasOne("ComputerStore.BoundedContext.Entities.Product", "Product")
                        .WithMany("AnonymousCart")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_AnonymousCartt_Product")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ComputerStore.BoundedContext.Entities.Website", "Website")
                        .WithMany("AnonymousCart")
                        .HasForeignKey("WebsiteId")
                        .HasConstraintName("FK_AnonymousCart_User")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.Cart", b =>
                {
                    b.HasOne("ComputerStore.BoundedContext.Entities.Product", "Product")
                        .WithMany("Cart")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Cart_Product")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ComputerStore.BoundedContext.Entities.User", "User")
                        .WithMany("Cart")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Cart_User")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ComputerStore.BoundedContext.Entities.Website", "Website")
                        .WithMany("Cart")
                        .HasForeignKey("WebsiteId")
                        .HasConstraintName("FK_Cart_Website")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.Order", b =>
                {
                    b.HasOne("ComputerStore.BoundedContext.Entities.User", "User")
                        .WithMany("Order")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Order_User")
                        .IsRequired();

                    b.HasOne("ComputerStore.BoundedContext.Entities.Website", "Website")
                        .WithMany("Order")
                        .HasForeignKey("WebsiteId")
                        .HasConstraintName("FK_Order_Website");
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.OrderDetail", b =>
                {
                    b.HasOne("ComputerStore.BoundedContext.Entities.Order", "Order")
                        .WithMany("OrderDetail")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_OrderDetail_Order")
                        .IsRequired();

                    b.HasOne("ComputerStore.BoundedContext.Entities.Product", "Product")
                        .WithMany("OrderDetail")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_OrderDetail_Product")
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.Product", b =>
                {
                    b.HasOne("ComputerStore.BoundedContext.Entities.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Product_Category")
                        .IsRequired();

                    b.HasOne("ComputerStore.BoundedContext.Entities.Website", "Website")
                        .WithMany("Product")
                        .HasForeignKey("WebsiteId")
                        .HasConstraintName("FK_Product_Website")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.ProductImage", b =>
                {
                    b.HasOne("ComputerStore.BoundedContext.Entities.Product", "Product")
                        .WithMany("ProductImage")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductImage_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.RefreshToken", b =>
                {
                    b.HasOne("ComputerStore.BoundedContext.Entities.User", "User")
                        .WithMany("RefreshToken")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_RefreshToken_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.User", b =>
                {
                    b.HasOne("ComputerStore.BoundedContext.Entities.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role")
                        .IsRequired();

                    b.HasOne("ComputerStore.BoundedContext.Entities.Website", "Website")
                        .WithMany("User")
                        .HasForeignKey("WebsiteId")
                        .HasConstraintName("FK_User_Website");
                });

            modelBuilder.Entity("ComputerStore.BoundedContext.Entities.Website", b =>
                {
                    b.HasOne("ComputerStore.BoundedContext.Entities.Company", "Company")
                        .WithOne("Website")
                        .HasForeignKey("ComputerStore.BoundedContext.Entities.Website", "CompanyId")
                        .HasConstraintName("FK_Website_Company")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
